import OpenAI from "openai";
import { Assistant } from "openai/resources/beta/assistants";
import { VectorStoreFileBatch } from "openai/resources/beta/vector-stores/file-batches";
import { BotStateStandAlone } from "@builderbot/bot/dist/types";
/**
 * createAssistants
 * @returns
 */
export declare const createAssistants: () => Promise<OpenAI.Beta.Assistants.Assistant>;
/**
 * retrieveAssistants
 * @returns
 */
export declare const retrieveAssistants: (id: string) => Promise<OpenAI.Beta.Assistants.Assistant>;
/**
 * createThread
 * @returns
 */
export declare const createThread: () => Promise<OpenAI.Beta.Threads.Thread>;
/**
 * addMessage
 * @param thread
 * @returns
 */
export declare const addMessage: (threadId: string, content: string) => Promise<OpenAI.Beta.Threads.Messages.Message>;
/**
 *
 * @param pathFiles
 * @returns
 */
export declare const uploadFile: (pathFiles: string[]) => Promise<OpenAI.Beta.VectorStores.FileBatches.VectorStoreFileBatch>;
export declare const run: (threadId: string, assistant: Assistant) => Promise<string>;
/**
 *
 * @param assistantId
 * @param vectorDb
 */
export declare const updateAssistants: (assistantId: string, vectorDb: VectorStoreFileBatch) => Promise<void>;
export declare const toAsk: (assistantId: string, message: string, state: BotStateStandAlone) => Promise<string>;
//# sourceMappingURL=index.d.ts.map